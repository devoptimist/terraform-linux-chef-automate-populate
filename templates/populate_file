#!/bin/bash -x

exec > ${tmp_path}/automate_server_populate.log 2>&1

jq_path="${tmp_path}/bin/jq"

if [[ ! -d $jq_path ]]; then
  mkdir -p $(dirname $jq_path)
fi

if [[ ! -f $jq_path ]]; then
  if hash curl; then
    sudo curl -L -o $jq_path ${jq_linux_url} && sudo chmod 755 $jq_path
  else
    sudo wget -O $jq_path ${jq_linux_url} && sudo chmod 755 $jq_path
  fi
fi

export PATH=$PATH:${tmp_path}/bin

# wait for automate to start
sleep 120

echo making admin token via cli
export TOKEN=`sudo chef-automate iam token create cli --admin`

echo "setting speciifc token value via API"

curl -X POST \
    ${url}/apis/iam/v2/tokens \
    --insecure \
    -H "api-token: $TOKEN" \
    -d '{"name":"dc-token","value": "${token}","description": "token for api ingest","active": true, "id": "dc-token"}'

echo "setting API policies"

curl -s \
  ${url}/apis/iam/v2/policies/ingest-access/members:add \
  --insecure \
  -H "api-token: $TOKEN" \
  -H "Content-Type: application/json" \
  -d '{"members":["token:dc-token"]}'

echo $TOKEN > ${tmp_path}/.a2_tmp

echo "{\"token\": \"$(cat ${tmp_path}/.a2_tmp)\"}" > ${tmp_path}/.a2_token

echo -e "#!/bin/bash\ncat ${tmp_path}/.a2_token | ${tmp_path}/bin/jq" > ${ds_script_path}

chmod +x ${ds_script_path}

until $(curl -ksf -o /dev/null "${url}/api/v0/compliance/profiles/search"  -H "Content-Type: application/json" -H "api-token: $${TOKEN}" -d {}); do
  printf '.'
  sleep 5
done

%{ for k in enabled_profiles }
%{ if k.version == "latest" }
profiles=($(curl -s -k "${url}/api/v0/compliance/profiles/search" \
  -H "Content-Type: application/json" \
  -H "api-token: $${TOKEN}" \
  -d '{"name":"${k.name}"}' | jq -r \
  'del(.total) | .[][]  | "\(.name) \(.version)"' | sort -n -k 2 | tail -n1))

curl -s -k "${url}/api/v0/compliance/profiles?owner=${k.owner}" \
  -H "Content-Type: application/json" \
  -H "api-token: $${TOKEN}" \
  -d @- << EOF
{
  "name":"$${profiles[0]}",
  "version":"$${profiles[1]}"
}
EOF
%{ else }
curl -s -k "${url}/api/v0/compliance/profiles?owner=${k.owner}" \
  -H "Content-Type: application/json" \
  -H "api-token: $${TOKEN}" \
  -d @- << EOF
{
  "name":"${k.name}",
  "version":"${k.version}"
}
EOF
%{ endif }
%{ endfor }
